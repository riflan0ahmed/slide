{"version":3,"file":"embla-carousel-class-names.esm.js","sources":["src/components/Options.ts","src/components/utils.ts","src/components/index.ts"],"sourcesContent":["import { CreateOptionsType } from 'embla-carousel/components/Options'\n\nexport type OptionsType = CreateOptionsType<{\n  selected: string\n  draggable: string\n  dragging: string\n}>\n\nexport const defaultOptions: OptionsType = {\n  active: true,\n  breakpoints: {},\n  selected: 'is-selected',\n  draggable: 'is-draggable',\n  dragging: 'is-dragging',\n}\n\nexport type ClassNamesOptionsType = Partial<OptionsType>\n","export function removeClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && cl.contains(className)) cl.remove(className)\n}\n\nexport function addClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && !cl.contains(className)) cl.add(className)\n}\n","import { defaultOptions, ClassNamesOptionsType, OptionsType } from './Options'\nimport { addClass, removeClass } from './utils'\nimport { CreatePluginType } from 'embla-carousel/components/Plugins'\nimport EmblaCarousel, {\n  EmblaCarouselType,\n  EmblaEventType,\n} from 'embla-carousel'\n\ndeclare module 'embla-carousel/components/Plugins' {\n  interface EmblaPluginsType {\n    classNames?: ClassNamesType\n  }\n}\n\nexport type ClassNamesType = CreatePluginType<{}, OptionsType>\n\nfunction ClassNames(userOptions?: ClassNamesOptionsType): ClassNamesType {\n  const optionsHandler = EmblaCarousel.optionsHandler()\n  const optionsBase = optionsHandler.merge(\n    defaultOptions,\n    ClassNames.globalOptions,\n  )\n  let options: ClassNamesType['options']\n  let carousel: EmblaCarouselType\n\n  let root: HTMLElement\n  let slides: HTMLElement[]\n  const selectedEvents: EmblaEventType[] = ['select', 'pointerUp']\n  const draggingEvents: EmblaEventType[] = ['pointerDown', 'pointerUp']\n\n  function init(embla: EmblaCarouselType): void {\n    carousel = embla\n    options = optionsHandler.atMedia(self.options)\n    root = carousel.rootNode()\n    slides = carousel.slideNodes()\n    const isDraggable = carousel.internalEngine().options.draggable\n\n    if (isDraggable) {\n      addClass(root, options.draggable)\n    }\n    if (options.dragging) {\n      draggingEvents.forEach((evt) => carousel.on(evt, toggleDraggingClass))\n    }\n    if (options.selected) {\n      selectedEvents.forEach((evt) => carousel.on(evt, toggleSelectedClass))\n      toggleSelectedClass()\n    }\n  }\n\n  function destroy(): void {\n    removeClass(root, options.draggable)\n    draggingEvents.forEach((evt) => carousel.off(evt, toggleDraggingClass))\n    selectedEvents.forEach((evt) => carousel.off(evt, toggleSelectedClass))\n    slides.forEach((slide) => removeClass(slide, options.selected))\n  }\n\n  function toggleDraggingClass(evt: EmblaEventType): void {\n    if (evt === 'pointerDown') addClass(root, options.dragging)\n    else removeClass(root, options.dragging)\n  }\n\n  function toggleSelectedClass(): void {\n    const inView = carousel.slidesInView(true)\n    const notInView = carousel.slidesNotInView(true)\n    notInView.forEach((index) => removeClass(slides[index], options.selected))\n    inView.forEach((index) => addClass(slides[index], options.selected))\n  }\n\n  const self: ClassNamesType = {\n    name: 'classNames',\n    options: optionsHandler.merge(optionsBase, userOptions),\n    init,\n    destroy,\n  }\n  return self\n}\n\nClassNames.globalOptions = <ClassNamesOptionsType | undefined>undefined\n\nexport default ClassNames\n"],"names":["defaultOptions","active","breakpoints","selected","draggable","dragging","removeClass","node","className","cl","classList","contains","remove","addClass","add","ClassNames","userOptions","optionsHandler","EmblaCarousel","optionsBase","merge","globalOptions","options","carousel","root","slides","selectedEvents","draggingEvents","init","embla","atMedia","self","rootNode","slideNodes","isDraggable","internalEngine","forEach","evt","on","toggleDraggingClass","toggleSelectedClass","destroy","off","slide","inView","slidesInView","notInView","slidesNotInView","index","name","undefined"],"mappings":"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"}